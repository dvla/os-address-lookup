#!/bin/bash
#
# jenkins_job_make_rpm
#
#
test -z $WORKSPACE && echo "WORKSPACE is not set so defaulting it to current directory" && export WORKSPACE=$PWD/../
echo "WORKSPACE = $WORKSPACE"

RPM_VERSION="$(date +'%Y%m%d%H%M%S')"
RPM_NAME="os-address-lookup"
RPM_OWNER="jenkins@dvla"
RPM_DESCRIPTION="Ordnance Survey Address Lookup"
RPM_URL="http://example.dotcom.com"
RPM_LICENSE="MIT"
RPM_VENDOR="DVLA"
RPM_PREFIX="/opt/os-address-lookup/"
RPM_TARGETDIR="$WORKSPACE/target/" #grab the jenkins WORKSPACE working dir
UPSTART_FILES_DIR="$WORKSPACE/rpm-build/upstart/"
PKG_SCRIPTS_DIR="$WORKSPACE/rpm-build/pkg-scripts/"
WORKDIR="$WORKSPACE/workdir"
LOGROTATE_FILES_DIR="rpm-build/logrotate.d/"

echo *********************************
echo
echo Creating RPM
echo
echo *********************************

# this is really ugly, refactor all of this
# create workdir directories
rm -rf $WORKDIR
mkdir -p $WORKDIR/$RPM_PREFIX
mkdir -p $WORKDIR/etc/init $WORKDIR/etc/logrotate.d

#  "Get the version of the binary from sbt and strip color information so we are just left with a version"
cd $WORKSPACE
VERSION=`sbt version | tail -1 | awk {'print $2'} | sed -E "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"`
echo VERSION = $VERSION
cd -

# copy objects to workdir directory
(
  cd $WORKDIR/$RPM_PREFIX/
  cp  $WORKSPACE/target/scala-2.10/*-assembly-$VERSION.jar os-address-lookup.jar
  cd -
)

# add the init files
cp -r $UPSTART_FILES_DIR/* $WORKDIR/etc/init

# add the logrotate files
cp -r $LOGROTATE_FILES_DIR/* $WORKDIR/etc/logrotate.d

# add application.conf
cp $WORKSPACE/target/scala-2.10/classes/application.conf $WORKDIR/$RPM_PREFIX/

# add a git log file
git log > $WORKDIR/$RPM_PREFIX/git-log.txt

#and the pkg pre/post install scripts

# package the thing
test -e $RPM_TARGETDIR || mkdir $RPM_TARGETDIR

fpm \
  --before-remove="$PKG_SCRIPTS_DIR/stop" \
  --after-install="$PKG_SCRIPTS_DIR/postinstall" \
  --description="$RPM_DESCRIPTION" \
  --url=$RPM_URL \
  --license="$RPM_LICENSE" \
  --vendor="$RPM_VENDOR" \
  -n $RPM_NAME \
  -v $RPM_VERSION  \
  -a all \
  -p $RPM_TARGETDIR/$RPM_NAME.rpm \
  -m $RPM_OWNER \
  -x "*.rpm" -x .git -x .gitignore \
  -t rpm \
  -C $WORKDIR \
  -s dir .

ln -s $WORKSPACE/target/$RPM_NAME.rpm $WORKSPACE/target/$RPM_NAME-$VERSION-$RPM_VERSION.rpm
ln -s $WORKSPACE/target/$RPM_NAME.rpm $WORKSPACE/target/$RPM_NAME-latest.rpm
ln -s $WORKSPACE/target/$RPM_NAME.rpm $WORKSPACE/target/$RPM_NAME-latest-$BRANCH_TO_BUILD.rpm
